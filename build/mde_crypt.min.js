/* 
* Hill's Cypher implementation for the Web 
* Depends on Dannjs & Mathjs 
* 
* Implementation Author: Matias Vazquez-Levi 
* License MIT 
*/
const MDE={arr_to_ascii:function(e){let t="";return e.forEach(e=>{void 0!==MDE.Keygen.ALPHA[Math.round(e)]&&0!==Math.round(e)&&(t+=MDE.Keygen.ALPHA[Math.round(e)])}),t},to_ascii:function(e){let t="";return e.matrix.forEach(e=>{e.forEach(e=>{Math.round(e-1)>=MDE.Keygen.ALPHA.length||0>Math.round(e-1)?t+=MDE.Keygen.ALPHA[Math.abs((Math.round(e)-1)%MDE.Keygen.ALPHA.length)]:t+=MDE.Keygen.ALPHA[Math.round(e)-1]})}),t}};MDE.Utils={unvalid_key:function(e){let t=Math.sqrt(e.length)%2;return 1!==t&&0!==t&&(Debug.error("Key must be a square length ex: 4, 9, 16, 25, 36 ..."),!0)},split2:function(e){let t=[];for(let n=0;n<e.length;n+=2)t.push(e[n]+e[n+1]);return t},to_square_m:function(e,t){if(e.length>t*t){Debug.error("Wrong dimension array");return}let n=new Matrix(t,t);for(let r=0;r<t;r++)for(let l=0;l<t;l++)r*t+l>=e.length?n.matrix[r][l]=0:n.matrix[r][l]=e[r*t+l];return n},hex32:function(e){let t=("00000000"+(e&=4294967295).toString(16).toUpperCase()).slice(-8);return new Uint8Array(MDE.Utils.split2(t).map(e=>parseInt(e,16)))},dd:function(e){return("00"+e).slice(-2)},from_buffer:function(e){return e},to_buffer:function(e){return e}},MDE.Keygen={random_matrix:function(e){let t=[];for(let n=0;n<e;n++){t[n]=Array(e).fill(0);for(let r=0;r<e;r++)t[n][r]=Math.floor(Math.random()*(MDE.Keygen.ALPHA.length-MDE.Keygen.CHARS.length-1)+(MDE.Keygen.CHARS.length+2))}return t},random:function(e){let t="";for(let n=0;n<e*e;n++)t+=MDE.Keygen.ALPHA[Math.floor(Math.random()*(MDE.Keygen.ALPHA.length-MDE.Keygen.CHARS.length-1)+(MDE.Keygen.CHARS.length+1))];return t},ascii_to_key_matrix:function(e){let t=Math.sqrt(e.length),n=[];for(let r=0;r<t;r++){n[r]=Array(t).fill(0);for(let l=0;l<t;l++)n[r][l]=MDE.Keygen.ALPHA.indexOf(e[r*t+l])+1}return n},parse_key:function(e){let t=e.split("\n");for(let n=0;n<t.length;n++)if(":"!==t[n][0]&&"#"!==t[n][0]&&"/"!==t[n][0]&&"-"!==t[n][0])return t[n];return MDE.Keygen.random(8)},getRangeAscii:function(e,t){let n="";for(let r=e;r<=t;r++)n+=String.fromCharCode(r);return n},HEADER:"--- KEY START ---\n",FOOTER:"\n---  KEY END  ---",INVALID:"\xef",CHARS:" \n|!@#$%^&*(){}[]:;\"'.,<>/?-+=_~`"},MDE.Keygen.ALPHA=MDE.Keygen.INVALID+MDE.Keygen.CHARS+MDE.Keygen.getRangeAscii(65,90)+MDE.Keygen.getRangeAscii(97,122)+MDE.Keygen.getRangeAscii(48,57),MDE.Encrypt=function(e,t){void 0!==t?MDE.Utils.unvalid_key(t)&&(t=MDE.Keygen.random(8)):t=MDE.Keygen.random(8);let n=(key=MDE.Keygen.ascii_to_key_matrix(t)).length,r=[];for(let l=0;l<e.length;l++)r.push(MDE.Keygen.ALPHA.indexOf(e[l]));let o=Math.ceil(e.length/(n*n)),i=[];for(let g=0;g<r.length;g+=n*n){let u=new Matrix(n,n),a=g+n*n;u.set(MDE.Utils.to_square_m(r.slice(g,a>=r.length?r.length:a),n).matrix),i.push(u)}let f=new Matrix(n,n);f.set(key);let E=[];for(let s=0;s<o;s++){let c=Matrix.mult(i[s],f);E.push(c.matrix)}let D=[];return E.forEach(e=>{e.forEach(e=>{e.forEach(e=>{D.push(e)})})}),{data:MDE.Utils.to_buffer(D),key:MDE.to_ascii(f)}},MDE.Decrypt=function(e,t){if(MDE.Utils.unvalid_key(t))return;let n=MDE.Keygen.ascii_to_key_matrix(t),r=n.length,l=MDE.Utils.from_buffer(e),o=Math.ceil(l.length/(r*r)),i=[];for(let g=0;g<l.length;g+=r*r){let u=new Matrix(r,r),a=g+r*r;u.set(MDE.Utils.to_square_m(l.slice(g,a>=l.length?l.length:a),r).matrix),i.push(u)}let f=new Matrix(r,r);f.set(math.inv(n));let E=[];for(let s=0;s<o;s++){let c=Matrix.mult(i[s],f);c.map(e=>Math.round(e)%MDE.Keygen.ALPHA.length);let D=[];c.matrix.forEach(e=>{e.forEach(e=>{D.push(e)})}),E.push(D)}let h=[].concat(...E);return{data:MDE.arr_to_ascii(h)}};
